# ~/.tmux.conf
# TODO:
# http://stackoverflow.com/questions/3891782/tmux-up-pane-down-pane-missing 
######
### Unbind existing tmux key bindings (except 0-9).

set -g default-terminal "screen-256color"
# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# copy mode stuff
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
setw -g mode-keys vi
unbind [
bind Escape copy-mode
#i'm not married to this key for paste
#p makes more sense, but we're using it for screen-like keybindings
#v makes sense, but ^av seems to be hard-bound to a vertical split
bind [ paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
 
# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server
 
# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window
 
# detach ^D d
unbind ^D
bind ^D detach
 
# displays *
unbind *
bind * list-clients
 
# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window
 
# title A
unbind A
bind A command-prompt "rename-window %%"
 
# other ^A
unbind ^A
bind ^A last-window
 
# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window
 
# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows
 
# quit \
unbind \
bind \ confirm-before "kill-server"

# reload tmux.config
unbind ^R
bind ^R source-file ~/.tmux.conf
 
# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"
 
# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client
 
# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind v split-window -h
unbind '"'
bind - split-window -v
bind h split-window -v
 
# History
set -g history-limit 10000
 
# Pane
unbind o
bind-key -n C-s select-pane -t :.+
 
# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'
 
# Status Bar
set -g status-bg black
set -g status-fg white
set -g status-interval 1
#set -g status-left '#[fg=colour10]#H#[default]'
set -g status-left ''
set -g status-right '#[fg=yellow]#(cut -d " " -f 2,4 /proc/loadavg)#[default] #[fg=colour62,bold]%Y-%m-%d %H:%M:%S#[default]'
 
# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity on
 
#these settings no longer work in tmux 3.x, but we're using promptline for this anyway
# Highlighting the active window in status bar
#setw -g window-status-current-bg red
# good reference: http://www.linuxcertif.com/man/1/tmux/
#setw -g window-status-current-fg blue 
#setw -g window-status-current-bg default
#setw -g window-status-current-attr bold

#setw -g window-status-alert-bg default 
#setw -g window-status-alert-fg cyan
#setw -g window-status-alert-attr none

#setw -g window-status-activity-attr default 
#setw -g window-status-activity-fg cyan
#setw -g window-status-activity-attr none


# Clock
#setw -g clock-mode-colour green
#setw -g clock-mode-style 24
 
# :kB: focus up
#unbind Tab
#bind-key -n Tab select-pane -t :.+ 
#unbind BTab
#bind-key -n BTab select-pane -t :.-
 
# " windowlist -b
unbind '"'
bind '"' choose-window

##We only need this on OSX
if-shell "if [[ `uname -s` = 'Darwin' ]]; then true; else false; fi" \
  'set -g default-command "reattach-to-user-namespace -l /bin/zsh"'

#tmux plugins
#may move my own settings to one of these..
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-ressurect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @continuum-restore 'on'
run '~/.tmux/plugins/tpm/tpm'


